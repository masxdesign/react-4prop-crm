var C=(e,t,s)=>{if(!t.has(e))throw TypeError("Cannot "+s)};var i=(e,t,s)=>(C(e,t,"read from private field"),s?s.call(e):t.get(e)),c=(e,t,s)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,s)},l=(e,t,s,r)=>(C(e,t,"write to private field"),r?r.call(e,s):t.set(e,s),s);var p=(e,t,s)=>(C(e,t,"access private method"),s);import{Z as U,a0 as k,ac as K,ad as D,a8 as w,D as L,r as m}from"./index-rSRR66Z-.js";var a,h,o,n,f,g,v,S,R,j=(R=class extends U{constructor(t,s){super();c(this,f);c(this,v);c(this,a,void 0);c(this,h,void 0);c(this,o,void 0);c(this,n,void 0);l(this,h,void 0),l(this,a,t),this.setOptions(s),this.bindMethods(),p(this,f,g).call(this)}bindMethods(){this.mutate=this.mutate.bind(this),this.reset=this.reset.bind(this)}setOptions(t){var r;const s=this.options;this.options=i(this,a).defaultMutationOptions(t),k(s,this.options)||i(this,a).getMutationCache().notify({type:"observerOptionsUpdated",mutation:i(this,o),observer:this}),(r=i(this,o))==null||r.setOptions(this.options),s!=null&&s.mutationKey&&this.options.mutationKey&&K(s.mutationKey)!==K(this.options.mutationKey)&&this.reset()}onUnsubscribe(){var t;this.hasListeners()||(t=i(this,o))==null||t.removeObserver(this)}onMutationUpdate(t){p(this,f,g).call(this),p(this,v,S).call(this,t)}getCurrentResult(){return i(this,h)}reset(){var t;(t=i(this,o))==null||t.removeObserver(this),l(this,o,void 0),p(this,f,g).call(this),p(this,v,S).call(this)}mutate(t,s){var r;return l(this,n,s),(r=i(this,o))==null||r.removeObserver(this),l(this,o,i(this,a).getMutationCache().build(i(this,a),this.options)),i(this,o).addObserver(this),i(this,o).execute(t)}},a=new WeakMap,h=new WeakMap,o=new WeakMap,n=new WeakMap,f=new WeakSet,g=function(){var s;const t=((s=i(this,o))==null?void 0:s.state)??D();l(this,h,{...t,isPending:t.status==="pending",isSuccess:t.status==="success",isError:t.status==="error",isIdle:t.status==="idle",mutate:this.mutate,reset:this.reset})},v=new WeakSet,S=function(t){w.batch(()=>{var s,r,u,y,d,O,x,E;if(i(this,n)&&this.hasListeners()){const b=i(this,h).variables,M=i(this,h).context;(t==null?void 0:t.type)==="success"?((r=(s=i(this,n)).onSuccess)==null||r.call(s,t.data,b,M),(y=(u=i(this,n)).onSettled)==null||y.call(u,t.data,null,b,M)):(t==null?void 0:t.type)==="error"&&((O=(d=i(this,n)).onError)==null||O.call(d,t.error,b,M),(E=(x=i(this,n)).onSettled)==null||E.call(x,void 0,t.error,b,M))}this.listeners.forEach(b=>{b(i(this,h))})})},R);function q(e,t){return typeof e=="function"?e(...t):!!e}function Q(e,t){const s=L(t),[r]=m.useState(()=>new j(s,e));m.useEffect(()=>{r.setOptions(e)},[r,e]);const u=m.useSyncExternalStore(m.useCallback(d=>r.subscribe(w.batchCalls(d)),[r]),()=>r.getCurrentResult(),()=>r.getCurrentResult()),y=m.useCallback((d,O)=>{r.mutate(d,O).catch(A)},[r]);if(u.error&&q(r.options.throwOnError,[u.error]))throw u.error;return{...u,mutate:y,mutateAsync:u.mutate}}function A(){}export{q as s,Q as u};
