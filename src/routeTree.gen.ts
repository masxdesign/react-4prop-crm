// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as CrmLogoutImport } from './routes/crm/logout'
import { Route as CrmDashboardImport } from './routes/crm/dashboard'
import { Route as CrmLoginRouteImport } from './routes/crm/login/route'
import { Route as CrmDashboardListImport } from './routes/crm/dashboard/list'
import { Route as CrmDashboardImportRouteImport } from './routes/crm/dashboard/import/route'
import { Route as CrmDashboardAddRouteImport } from './routes/crm/dashboard/add/route'
import { Route as CrmDashboardIndexRouteImport } from './routes/crm/dashboard/index/route'
import { Route as CrmDashboardListDatasetRouteImport } from './routes/crm/dashboard/list/$dataset/route'
import { Route as CrmDashboardListIndexRouteImport } from './routes/crm/dashboard/list/index/route'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const CrmLogoutRoute = CrmLogoutImport.update({
  path: '/crm/logout',
  getParentRoute: () => rootRoute,
} as any)

const CrmDashboardRoute = CrmDashboardImport.update({
  path: '/crm/dashboard',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/crm/dashboard.lazy').then((d) => d.Route))

const CrmLoginRouteRoute = CrmLoginRouteImport.update({
  path: '/crm/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/crm/login/route.lazy').then((d) => d.Route),
)

const CrmDashboardListRoute = CrmDashboardListImport.update({
  path: '/list',
  getParentRoute: () => CrmDashboardRoute,
} as any).lazy(() =>
  import('./routes/crm/dashboard/list.lazy').then((d) => d.Route),
)

const CrmDashboardImportRouteRoute = CrmDashboardImportRouteImport.update({
  path: '/import',
  getParentRoute: () => CrmDashboardRoute,
} as any).lazy(() =>
  import('./routes/crm/dashboard/import/route.lazy').then((d) => d.Route),
)

const CrmDashboardAddRouteRoute = CrmDashboardAddRouteImport.update({
  path: '/add',
  getParentRoute: () => CrmDashboardRoute,
} as any).lazy(() =>
  import('./routes/crm/dashboard/add/route.lazy').then((d) => d.Route),
)

const CrmDashboardIndexRouteRoute = CrmDashboardIndexRouteImport.update({
  path: '/',
  getParentRoute: () => CrmDashboardRoute,
} as any).lazy(() =>
  import('./routes/crm/dashboard/index/route.lazy').then((d) => d.Route),
)

const CrmDashboardListDatasetRouteRoute =
  CrmDashboardListDatasetRouteImport.update({
    path: '/$dataset',
    getParentRoute: () => CrmDashboardListRoute,
  } as any).lazy(() =>
    import('./routes/crm/dashboard/list/$dataset/route.lazy').then(
      (d) => d.Route,
    ),
  )

const CrmDashboardListIndexRouteRoute = CrmDashboardListIndexRouteImport.update(
  {
    path: '/',
    getParentRoute: () => CrmDashboardListRoute,
  } as any,
).lazy(() =>
  import('./routes/crm/dashboard/list/index/route.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/crm/login': {
      preLoaderRoute: typeof CrmLoginRouteImport
      parentRoute: typeof rootRoute
    }
    '/crm/dashboard': {
      preLoaderRoute: typeof CrmDashboardImport
      parentRoute: typeof rootRoute
    }
    '/crm/logout': {
      preLoaderRoute: typeof CrmLogoutImport
      parentRoute: typeof rootRoute
    }
    '/crm/dashboard/': {
      preLoaderRoute: typeof CrmDashboardIndexRouteImport
      parentRoute: typeof CrmDashboardImport
    }
    '/crm/dashboard/add': {
      preLoaderRoute: typeof CrmDashboardAddRouteImport
      parentRoute: typeof CrmDashboardImport
    }
    '/crm/dashboard/import': {
      preLoaderRoute: typeof CrmDashboardImportRouteImport
      parentRoute: typeof CrmDashboardImport
    }
    '/crm/dashboard/list': {
      preLoaderRoute: typeof CrmDashboardListImport
      parentRoute: typeof CrmDashboardImport
    }
    '/crm/dashboard/list/': {
      preLoaderRoute: typeof CrmDashboardListIndexRouteImport
      parentRoute: typeof CrmDashboardListImport
    }
    '/crm/dashboard/list/$dataset': {
      preLoaderRoute: typeof CrmDashboardListDatasetRouteImport
      parentRoute: typeof CrmDashboardListImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  CrmLoginRouteRoute,
  CrmDashboardRoute.addChildren([
    CrmDashboardIndexRouteRoute,
    CrmDashboardAddRouteRoute,
    CrmDashboardImportRouteRoute,
    CrmDashboardListRoute.addChildren([
      CrmDashboardListIndexRouteRoute,
      CrmDashboardListDatasetRouteRoute,
    ]),
  ]),
  CrmLogoutRoute,
])
