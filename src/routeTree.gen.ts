/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AdminImport } from './routes/_admin'
import { Route as LoginRouteImport } from './routes/login/route'
import { Route as IndexImport } from './routes/index'
import { Route as AdminRemoteImport } from './routes/_admin/_remote'
import { Route as AdminDashboardImport } from './routes/_admin/_dashboard'
import { Route as AdminRemoteIntegrateSendEnquiryRouteImport } from './routes/_admin/_remote/integrate/send-enquiry/route'
import { Route as AdminDashboardDashboardDataClientsImport } from './routes/_admin/_dashboard/dashboard/data/clients'
import { Route as AdminDashboardDashboardDataEachListRouteImport } from './routes/_admin/_dashboard/dashboard/data/each/list/route'
import { Route as AdminDashboardDashboardDataClientsListRouteImport } from './routes/_admin/_dashboard/dashboard/data/clients/list/route'
import { Route as AdminDashboardDashboardDataClientsImportRouteImport } from './routes/_admin/_dashboard/dashboard/data/clients/import/route'
import { Route as AdminDashboardDashboardDataClientsAddRouteImport } from './routes/_admin/_dashboard/dashboard/data/clients/add/route'

// Create/Update Routes

const AdminRoute = AdminImport.update({
  id: '/_admin',
  getParentRoute: () => rootRoute,
} as any)

const LoginRouteRoute = LoginRouteImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login/route.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AdminRemoteRoute = AdminRemoteImport.update({
  id: '/_remote',
  getParentRoute: () => AdminRoute,
} as any)

const AdminDashboardRoute = AdminDashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => AdminRoute,
} as any)

const AdminRemoteIntegrateSendEnquiryRouteRoute =
  AdminRemoteIntegrateSendEnquiryRouteImport.update({
    path: '/integrate/send-enquiry',
    getParentRoute: () => AdminRemoteRoute,
  } as any).lazy(() =>
    import('./routes/_admin/_remote/integrate/send-enquiry/route.lazy').then(
      (d) => d.Route,
    ),
  )

const AdminDashboardDashboardDataClientsRoute =
  AdminDashboardDashboardDataClientsImport.update({
    path: '/dashboard/data/clients',
    getParentRoute: () => AdminDashboardRoute,
  } as any).lazy(() =>
    import('./routes/_admin/_dashboard/dashboard/data/clients.lazy').then(
      (d) => d.Route,
    ),
  )

const AdminDashboardDashboardDataEachListRouteRoute =
  AdminDashboardDashboardDataEachListRouteImport.update({
    path: '/dashboard/data/each/list',
    getParentRoute: () => AdminDashboardRoute,
  } as any).lazy(() =>
    import(
      './routes/_admin/_dashboard/dashboard/data/each/list/route.lazy'
    ).then((d) => d.Route),
  )

const AdminDashboardDashboardDataClientsListRouteRoute =
  AdminDashboardDashboardDataClientsListRouteImport.update({
    path: '/list',
    getParentRoute: () => AdminDashboardDashboardDataClientsRoute,
  } as any).lazy(() =>
    import(
      './routes/_admin/_dashboard/dashboard/data/clients/list/route.lazy'
    ).then((d) => d.Route),
  )

const AdminDashboardDashboardDataClientsImportRouteRoute =
  AdminDashboardDashboardDataClientsImportRouteImport.update({
    path: '/import',
    getParentRoute: () => AdminDashboardDashboardDataClientsRoute,
  } as any).lazy(() =>
    import(
      './routes/_admin/_dashboard/dashboard/data/clients/import/route.lazy'
    ).then((d) => d.Route),
  )

const AdminDashboardDashboardDataClientsAddRouteRoute =
  AdminDashboardDashboardDataClientsAddRouteImport.update({
    path: '/add',
    getParentRoute: () => AdminDashboardDashboardDataClientsRoute,
  } as any).lazy(() =>
    import(
      './routes/_admin/_dashboard/dashboard/data/clients/add/route.lazy'
    ).then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRoute
    }
    '/_admin': {
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/_admin/_dashboard': {
      preLoaderRoute: typeof AdminDashboardImport
      parentRoute: typeof AdminImport
    }
    '/_admin/_remote': {
      preLoaderRoute: typeof AdminRemoteImport
      parentRoute: typeof AdminImport
    }
    '/_admin/_remote/integrate/send-enquiry': {
      preLoaderRoute: typeof AdminRemoteIntegrateSendEnquiryRouteImport
      parentRoute: typeof AdminRemoteImport
    }
    '/_admin/_dashboard/dashboard/data/clients': {
      preLoaderRoute: typeof AdminDashboardDashboardDataClientsImport
      parentRoute: typeof AdminDashboardImport
    }
    '/_admin/_dashboard/dashboard/data/clients/add': {
      preLoaderRoute: typeof AdminDashboardDashboardDataClientsAddRouteImport
      parentRoute: typeof AdminDashboardDashboardDataClientsImport
    }
    '/_admin/_dashboard/dashboard/data/clients/import': {
      preLoaderRoute: typeof AdminDashboardDashboardDataClientsImportRouteImport
      parentRoute: typeof AdminDashboardDashboardDataClientsImport
    }
    '/_admin/_dashboard/dashboard/data/clients/list': {
      preLoaderRoute: typeof AdminDashboardDashboardDataClientsListRouteImport
      parentRoute: typeof AdminDashboardDashboardDataClientsImport
    }
    '/_admin/_dashboard/dashboard/data/each/list': {
      preLoaderRoute: typeof AdminDashboardDashboardDataEachListRouteImport
      parentRoute: typeof AdminDashboardImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  LoginRouteRoute,
  AdminRoute.addChildren([
    AdminDashboardRoute.addChildren([
      AdminDashboardDashboardDataClientsRoute.addChildren([
        AdminDashboardDashboardDataClientsAddRouteRoute,
        AdminDashboardDashboardDataClientsImportRouteRoute,
        AdminDashboardDashboardDataClientsListRouteRoute,
      ]),
      AdminDashboardDashboardDataEachListRouteRoute,
    ]),
    AdminRemoteRoute.addChildren([AdminRemoteIntegrateSendEnquiryRouteRoute]),
  ]),
])

/* prettier-ignore-end */
